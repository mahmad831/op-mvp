workflows:
  android-debug:
    name: Android Debug APK
    environment:
      flutter: stable
      java: 17
    scripts:
      - name: Prepare Flutter Android project
        script: |
          echo "Working dir: $(pwd)"
          # Create android/ if missing (for repos that only have lib/ + pubspec.yaml)
          if [ ! -d "android" ]; then
            flutter create . --platforms=android
          fi

          # Ensure AndroidX and give Gradle/Kotlin more heap
          {
            echo "org.gradle.jvmargs=-Xmx3g -Dkotlin.daemon.jvm.options=-Xmx1g"
            echo "android.useAndroidX=true"
            echo "android.enableJetifier=true"
          } >> android/gradle.properties

          # Force safe SDK versions for ML Kit & plugins
          APP_GRADLE="android/app/build.gradle"
          if [ -f "$APP_GRADLE" ]; then
            sed -i.bak 's/compileSdkVersion [0-9][0-9]*/compileSdkVersion 34/g' "$APP_GRADLE" || true
            sed -i.bak 's/minSdkVersion [0-9][0-9]*/minSdkVersion 21/g' "$APP_GRADLE" || true
            sed -i.bak 's/targetSdkVersion [0-9][0-9]*/targetSdkVersion 34/g' "$APP_GRADLE" || true
          fi

          flutter clean
          flutter pub get

      - name: Diagnostics
        script: |
          flutter --version
          flutter doctor -v
          echo "---- android/gradle.properties ----"
          cat android/gradle.properties || true
          echo "---- SDK lines in app/build.gradle ----"
          grep -nE 'compileSdkVersion|minSdkVersion|targetSdkVersion' android/app/build.gradle || true

      - name: Build (Gradle with stacktrace)
        script: |
          cd android
          ./gradlew assembleDebug --no-daemon --stacktrace --info

    artifacts:
      - android/app/build/outputs/apk/debug/app-debug.apk
